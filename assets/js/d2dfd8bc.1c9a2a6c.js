"use strict";(self.webpackChunkdev_journal=self.webpackChunkdev_journal||[]).push([[9148],{519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>r});var o=n(3010),s=n(2803);const i={sidebar_position:1,title:"Deployment to Cloudflare"},a="Deployment to Cloudflare with Github Actions",l={unversionedId:"tutorial-docusaurus/deployment-to-cloudflare",id:"tutorial-docusaurus/deployment-to-cloudflare",title:"Deployment to Cloudflare",description:"Follow this tutorial for setting up cloudflare pages deployment with Github Actions. Use the action below instead.",source:"@site/docs/tutorial-docusaurus/deployment-to-cloudflare.md",sourceDirName:"tutorial-docusaurus",slug:"/tutorial-docusaurus/deployment-to-cloudflare",permalink:"/docs/tutorial-docusaurus/deployment-to-cloudflare",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Deployment to Cloudflare"},sidebar:"tutorialSidebar",previous:{title:"Getting started with Docusaurus",permalink:"/docs/tutorial-docusaurus/intro"},next:{title:"Deployment to Github Pages",permalink:"/docs/tutorial-docusaurus/ci-with-github-actions"}},u={},r=[{value:"Action",id:"action",level:3}];function c(e){const t=Object.assign({h1:"h1",p:"p",a:"a",h3:"h3",pre:"pre",code:"code"},(0,s.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"deployment-to-cloudflare-with-github-actions",children:"Deployment to Cloudflare with Github Actions"}),"\n",(0,o.jsxs)(t.p,{children:["Follow this ",(0,o.jsx)(t.a,{href:"https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/",children:"tutorial"})," for setting up cloudflare pages deployment with Github Actions. Use the action below instead."]}),"\n",(0,o.jsx)(t.h3,{id:"action",children:"Action"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",metastring:'title="./.github/workflows/pages-deployment.yml"',children:"name: Deploy to Cloudflare Pages\n\non:\n    push:\n        branches:\n            - main\n\njobs:\n    deploy:\n        runs-on: ubuntu-latest\n        permissions:\n            contents: read\n            deployments: write\n        name: Deploy to Cloudflare Pages\n        steps:\n            - uses: actions/checkout@v3\n            - uses: pnpm/action-setup@v2.2.4\n              with:\n                  version: 7\n\n            - name: \ud83d\udce6 Cache pnpm and node_modules\n              uses: actions/cache@v3\n              with:\n                  path: |\n                      ~/.pnpm-store\n                      node_modules\n                  key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n                  restore-keys: pnpm-\n\n            - name: \ud83d\udddc\ufe0f Install dependencies\n              run: pnpm install --no-frozen-lockfile\n            - name: \ud83c\udfd7 Build website\n              run: pnpm run build\n\n            - name: \ufe0f\ud83c\udff7 Add commit hash to <html> tag\n              run: |\n                  COMMIT_HASH=$(echo ${{ github.sha }} | cut -c 1-7)\n                  sed -i 's/<html /<html data-commit-hash=\"'\"$COMMIT_HASH\"'\" /' ./build/index.html\n\n            - name: Publish\n              uses: cloudflare/pages-action@1\n              with:\n                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}\n                  projectName: #YOUR_CLOUDFLARE_PROJECT_NAME\n                  directory: build\n                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}\n"})})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,s.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(c,e)})):c(e)}},2803:(e,t,n)=>{n.d(t,{Zo:()=>l,ah:()=>i});var o=n(5170);const s=o.createContext({});function i(e){const t=o.useContext(s);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function l({components:e,children:t,disableParentContext:n}){let l;return l=n?"function"==typeof e?e({}):e||a:i(e),o.createElement(s.Provider,{value:l},t)}}}]);