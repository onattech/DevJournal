"use strict";(self.webpackChunkdev_journal=self.webpackChunkdev_journal||[]).push([[2661],{9613:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var o=n(9496);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=o.createContext({}),l=function(t){var e=o.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},c=function(t){var e=l(t.components);return o.createElement(u.Provider,{value:e},t.children)},p="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,u=t.parentName,c=a(t,["components","mdxType","originalType","parentName"]),p=l(n),m=i,d=p["".concat(u,".").concat(m)]||p[m]||h[m]||r;return n?o.createElement(d,s(s({ref:e},c),{},{components:n})):o.createElement(d,s({ref:e},c))}));function d(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,s=new Array(r);s[0]=m;var a={};for(var u in e)hasOwnProperty.call(e,u)&&(a[u]=e[u]);a.originalType=t,a[p]="string"==typeof t?t:i,s[1]=a;for(var l=2;l<r;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6317:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=n(1163),i=(n(9496),n(9613));const r={sidebar_position:1,title:"CI with Github Actions"},s="Continuous integration with Github Actions",a={unversionedId:"tutorial-docusaurus/ci-with-github-actions",id:"tutorial-docusaurus/ci-with-github-actions",title:"CI with Github Actions",description:"Below is a workflow YAML to deploy a Docusaurus site with pnpm to GitHub Pages via GitHub Actions. An action to deploy will be triggered on each push to the main branch.",source:"@site/docs/tutorial-docusaurus/ci-with-github-actions.md",sourceDirName:"tutorial-docusaurus",slug:"/tutorial-docusaurus/ci-with-github-actions",permalink:"/docs/tutorial-docusaurus/ci-with-github-actions",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"CI with Github Actions"},sidebar:"tutorialSidebar",previous:{title:"Getting started with Docusaurus",permalink:"/docs/tutorial-docusaurus/intro"},next:{title:"Algolia setup",permalink:"/docs/tutorial-docusaurus/algolia-setup"}},u={},l=[{value:"Steps to follow",id:"steps-to-follow",level:3},{value:"Set workflow permissions",id:"set-workflow-permissions",level:3}],c={toc:l},p="wrapper";function h(t){let{components:e,...r}=t;return(0,i.kt)(p,(0,o.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"continuous-integration-with-github-actions"},"Continuous integration with Github Actions"),(0,i.kt)("p",null,"Below is a workflow YAML to deploy a Docusaurus site with pnpm to GitHub Pages via GitHub Actions. An action to deploy will be triggered on each push to the main branch."),(0,i.kt)("h3",{id:"steps-to-follow"},"Steps to follow"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add the YAML file to the project directory."),(0,i.kt)("li",{parentName:"ol"},"Setup a token on Github."),(0,i.kt)("li",{parentName:"ol"},"Make a push to the main branch.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="./.github/workflows/deploy.yml"',title:'"./.github/workflows/deploy.yml"'},"name: Deploy to GitHub Pages\n\non:\n    push:\n        branches:\n            - main\n        # Review gh actions docs if you want to further define triggers, paths, etc\n        # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\n#\njobs:\n    deploy:\n        name: Deploy to GitHub Pages\n        runs-on: ubuntu-latest\n        steps:\n            - uses: actions/checkout@v3\n            - uses: pnpm/action-setup@v2.2.4\n              with:\n                  version: 7\n\n            - name: \ud83d\udce6 Cache pnpm and node_modules\n              uses: actions/cache@v3\n              with:\n                  path: |\n                      ~/.pnpm-store\n                      node_modules\n                  key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n                  restore-keys: pnpm-\n\n            - name: \ud83d\udddc\ufe0f Install dependencies\n              run: pnpm install --no-frozen-lockfile\n            - name: \ud83c\udfd7 Build website\n              run: pnpm run build\n\n            # Optional\n            - name: \ufe0f\ud83c\udff7 Add commit hash to <html> tag\n              run: |\n                  COMMIT_HASH=$(echo ${{ github.sha }} | cut -c 1-7)\n                  sed -i 's/<html /<html data-commit-hash=\"'\"$COMMIT_HASH\"'\" /' ./build/index.html\n\n            # Popular action to deploy to GitHub Pages:\n            # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n            - name: Deploy to GitHub Pages\n              uses: peaceiris/actions-gh-pages@v3\n              with:\n                  github_token: ${{ secrets.GITHUB_TOKEN }}\n                  # Build output to publish to the `gh-pages` branch:\n                  publish_dir: ./build\n                  # The following lines assign commit authorship to the official\n                  # GH-Actions bot for deploys to `gh-pages` branch:\n                  # https://github.com/actions/checkout/issues/13#issuecomment-724415212\n                  # The GH actions bot is used by default if you didn't specify the two fields.\n                  # You can swap them out with your own user credentials.\n                  user_name: ${{ github.event.pusher.name }}\n                  user_email: ${{ github.event.pusher.email }}\n# Give permission to workflow => https://stackoverflow.com/a/75308228\n")),(0,i.kt)("h3",{id:"set-workflow-permissions"},"Set workflow permissions"),(0,i.kt)("p",null,"Github actions needs permissions to commit to the repository. You may give necessary permission by going to ",(0,i.kt)("inlineCode",{parentName:"p"},"Settings -> Actions -> General -> Workflow permissions")," and selecting ",(0,i.kt)("inlineCode",{parentName:"p"},"Read and write permissions")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Workflow permissions",src:n(8685).Z,width:"1299",height:"1215"})))}h.isMDXComponent=!0},8685:(t,e,n)=>{n.d(e,{Z:()=>o});const o=n.p+"assets/images/workflowPermissions-98b929ca5a94773fe06b6f794842703e.png"}}]);