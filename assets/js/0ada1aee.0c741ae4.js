"use strict";(self.webpackChunkdev_journal=self.webpackChunkdev_journal||[]).push([[7550],{866:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>h,toc:()=>l});var n=s(3010),i=s(2803);const o={sidebar_position:1,title:"Add git commit hash to website"},a="Add git commit hash to your website",h={unversionedId:"tutorial-devops/add-commit-hash-to-website",id:"tutorial-devops/add-commit-hash-to-website",title:"Add git commit hash to website",description:"You updated your site, committed and pushed. Continious integration picked up and will soon deploy. Now is the time for endless refreshes. You are not even sure if changes are in place because the latest change didn't have any visual changes. How can you tell if the latest commit is published? Well, why not put the latest commit hash in the `` tag? It is very simple with Github Actions. Below is the snippet of the deployment yaml.",source:"@site/docs/tutorial-devops/add-commit-hash-to-website.md",sourceDirName:"tutorial-devops",slug:"/tutorial-devops/add-commit-hash-to-website",permalink:"/docs/tutorial-devops/add-commit-hash-to-website",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Add git commit hash to website"},sidebar:"tutorialSidebar",previous:{title:"DevOps",permalink:"/docs/category/devops"},next:{title:"Github Actions env variables",permalink:"/docs/tutorial-devops/github-actions-env-variables"}},d={},l=[{value:"YAML",id:"yaml",level:2},{value:"Screenshot",id:"screenshot",level:2}];function r(e){const t=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",img:"img"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"add-git-commit-hash-to-your-website",children:"Add git commit hash to your website"}),"\n",(0,n.jsxs)(t.p,{children:["You updated your site, committed and pushed. Continious integration picked up and will soon deploy. Now is the time for endless refreshes. You are not even sure if changes are in place because the latest change didn't have any visual changes. How can you tell if the latest commit is published? Well, why not put the latest commit hash in the ",(0,n.jsx)(t.code,{children:"<html>"})," tag? It is very simple with Github Actions. Below is the snippet of the deployment yaml."]}),"\n",(0,n.jsx)(t.h2,{id:"yaml",children:"YAML"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'{22-25} title="deploy.yml"',children:"name: Deploy to GitHub Pages\n\non:\n    push:\n        branches:\n            - main\njobs:\n    deploy:\n        name: Deploy to GitHub Pages\n        runs-on: ubuntu-latest\n        steps:\n            - uses: actions/checkout@v3\n            - uses: pnpm/action-setup@v2.2.4\n              with:\n                  version: 7\n\n            - name: \ud83d\udddc\ufe0f Install dependencies\n              run: pnpm install\n            - name: \ud83c\udfd7 Build website\n              run: pnpm run build\n\n            - name: \ufe0f\ud83c\udff7 Add commit hash to <html> tag\n              run: |\n                  COMMIT_HASH=$(echo ${{ github.sha }} | cut -c 1-7)\n                  sed -i 's/<html /<html data-commit-hash=\"'\"$COMMIT_HASH\"'\" /' ./build/index.html\n\n            - name: Deploy to GitHub Pages\n              uses: peaceiris/actions-gh-pages@v3\n              with:\n                  github_token: ${{ secrets.GITHUB_TOKEN }}\n                  publish_dir: ./build\n                  user_name: ${{ github.event.pusher.name }}\n                  user_email: ${{ github.event.pusher.email }}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"screenshot",children:"Screenshot"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Api Key",src:s(6658).Z+"",width:"1193",height:"1051"})})]})}const c=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(r,e)})):r(e)}},6658:(e,t,s)=>{s.d(t,{Z:()=>n});const n=s.p+"assets/images/githash-0672d65987d201acb6244a8e938543b4.png"},2803:(e,t,s)=>{s.d(t,{Zo:()=>h,ah:()=>o});var n=s(5170);const i=n.createContext({});function o(e){const t=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function h({components:e,children:t,disableParentContext:s}){let h;return h=s?"function"==typeof e?e({}):e||a:o(e),n.createElement(i.Provider,{value:h},t)}}}]);