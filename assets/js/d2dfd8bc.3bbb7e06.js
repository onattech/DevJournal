"use strict";(self.webpackChunkdev_journal=self.webpackChunkdev_journal||[]).push([[9148],{4154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=n(1527),s=n(3883);const i={sidebar_position:1,title:"Deployment to Cloudflare"},a="Deployment to Cloudflare with Github Actions",l={id:"tutorial-docusaurus/deployment-to-cloudflare",title:"Deployment to Cloudflare",description:"Follow this tutorial for setting up cloudflare pages deployment with Github Actions. Use the action below instead.",source:"@site/docs/tutorial-docusaurus/deployment-to-cloudflare.md",sourceDirName:"tutorial-docusaurus",slug:"/tutorial-docusaurus/deployment-to-cloudflare",permalink:"/docs/tutorial-docusaurus/deployment-to-cloudflare",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Deployment to Cloudflare"},sidebar:"tutorialSidebar",previous:{title:"Getting started with Docusaurus",permalink:"/docs/tutorial-docusaurus/intro"},next:{title:"Deployment to Github Pages",permalink:"/docs/tutorial-docusaurus/ci-with-github-actions"}},r={},u=[{value:"Action",id:"action",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"deployment-to-cloudflare-with-github-actions",children:"Deployment to Cloudflare with Github Actions"}),"\n",(0,o.jsxs)(t.p,{children:["Follow this ",(0,o.jsx)(t.a,{href:"https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/",children:"tutorial"})," for setting up cloudflare pages deployment with Github Actions. Use the action below instead."]}),"\n",(0,o.jsx)(t.h3,{id:"action",children:"Action"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",metastring:'title="./.github/workflows/pages-deployment.yml"',children:"name: Deploy to Cloudflare Pages\n\non:\n    push:\n        branches:\n            - main\n\njobs:\n    deploy:\n        runs-on: ubuntu-latest\n        permissions:\n            contents: read\n            deployments: write\n        name: Deploy to Cloudflare Pages\n        steps:\n            - uses: actions/checkout@v3\n            - uses: pnpm/action-setup@v2.2.4\n              with:\n                  version: 7\n\n            - name: \ud83d\udce6 Cache pnpm and node_modules\n              uses: actions/cache@v3\n              with:\n                  path: |\n                      ~/.pnpm-store\n                      node_modules\n                  key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}\n                  restore-keys: pnpm-\n\n            - name: \ud83d\udddc\ufe0f Install dependencies\n              run: pnpm install --no-frozen-lockfile\n            - name: \ud83c\udfd7 Build website\n              run: pnpm run build\n\n            - name: \ufe0f\ud83c\udff7 Add commit hash to <html> tag\n              run: |\n                  COMMIT_HASH=$(echo ${{ github.sha }} | cut -c 1-7)\n                  sed -i 's/<html /<html data-commit-hash=\"'\"$COMMIT_HASH\"'\" /' ./build/index.html\n\n            - name: Publish\n              uses: cloudflare/pages-action@1\n              with:\n                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}\n                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}\n                  projectName: #YOUR_CLOUDFLARE_PROJECT_NAME\n                  directory: build\n                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},3883:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>a});var o=n(959);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);